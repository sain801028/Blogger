{"meta":{"title":"阿賢玩物分享","subtitle":"Fix your eyes forward on what you can do, not back on what you cannot change.","description":null,"author":"阿賢","url":"https://sain801028.github.io/Blogger"},"pages":[{"title":"","date":"2017-05-09T09:23:36.523Z","updated":"2017-05-09T09:23:36.523Z","comments":false,"path":"categories/index.html","permalink":"https://sain801028.github.io/Blogger/categories/index.html","excerpt":"","text":""},{"title":"","date":"2017-05-09T09:23:38.074Z","updated":"2017-05-09T09:23:38.074Z","comments":false,"path":"tags/index.html","permalink":"https://sain801028.github.io/Blogger/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"GitHub建置Hexo開發部落格","slug":"GitHub建置Hexo開發部落格","date":"2017-04-20T04:21:19.000Z","updated":"2017-05-09T09:53:20.830Z","comments":true,"path":"2017/04/20/GitHub建置Hexo開發部落格/","link":"","permalink":"https://sain801028.github.io/Blogger/2017/04/20/GitHub建置Hexo開發部落格/","excerpt":"","text":"環境 (前置)安裝gitgit 官網下載最新版(winsows) 安裝node.jsnods.js 官網下載最新版(windows) Github 與 SSH 連結 (前置)建立一個專案專案名稱為 username.github.io GitConfig12$ git config --global user.name \"Your Username\"$ git config --global user.email \"Your Email\" 產生SSH檢查是否產生ssh過1$ cd ~/.SSH 產生SSH1$ ssh-keygen -t rsa -C &quot;Your Email&quot; 此時應該會跳出訊息1234Generating public/private rsa key pair.Enter file in which to save the key (/Users/SherD/.ssh/id_rsa): Enter跳過Enter passphrase (empty for no passphrase): Enter跳過Enter same passphrase again: Enter跳過 複製 rsa金鑰 github1cat ~/.ssh/id_rsa.pub | pbcopy 在github的帳號設定(Personal settings)裡面有個 SSH and GPG keys在SSH keys 點選 New SSH Keys 12Title 金鑰名Key 貼上剛才的rsa金鑰 點選add SSH key 確認SSH key 是否正常1$ssh -T git@github.com 第一次會出現選項 請打yes123The authenticity of host &apos;github.com ()&apos; can&apos;t be established.RSA key fingerprint is xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx.Are you sure you want to continue connecting (yes/no)? (yes並enter) 出現下面訊息代表成功，此時就可使用ssh 存取github1Hi Sher! You&apos;ve successfully authenticated, but GitHub does not provide shell access. Hexo建置開始建置部落格創建一個blog資料夾，並在資料夾中執行 git bash 安裝hexo1$ npm install hexo-cli -g Hexo 初始化 會建立所有相關套件1$ hexo i 主題安裝1$ git clone git@github.com:yscoder/hexo-theme-indigo.git themes/indigo config.yml 設定檔編輯編輯blog資料夾根目錄的config.yml 將裡面的theme 改為indigo 添加依賴套件123$ npm install hexo-renderer-less --save$ npm install hexo-generator-feed --save$ npm install hexo-generator-json-content --save 本地端測試 (可在 localhost:4000 預覽網頁)1$ hexo s 生成靜態資料1$ hexo g 再次修改 config.yml 設定檔 最下面的deploy 改為12345deploy: type: git repository: git@github.com:D-Sher/d-sher.github.io.git (your sshgit) branch: master message: update ###安裝部屬套件1$ npm install hexo-deployer-git --save 部屬到網站1$ hexo d 使用Hexo 寫你的第一篇文章建立文章1$ hexo n (文章名稱) 此時可在 source/_posts/(文章名稱).md 編輯 markdown 檔 加入圖片套件可以增加 一個圖片位置套件1$ npm install hexo-filter-pathfix --save 此套件在嵌於網站的資源(圖片 資料)擁有正確的路徑 例如實際的位置 source/_posts/用github建置Hexo開發部落格/1.png 這邊記得要修改跟目錄的 config.yml 裡面的1post_asset_folder: true 我們即可利用嵌入碼1![範例圖片](1.png) 最後顯示 範例圖片 更新新增或編輯文件後 生成靜態檔案後部屬 網站即便更新12$ hexo g$ hexo d 備份備份Hexo的檔案在跟目錄的 config.yml 底下新增一個backup1234backup: type: git repository: github: git@github.com:D-Sher/d-sher.github.io.git,Hexo (最後面斜線為分支名稱) 安裝備份套件1$ npm install hexo-git-backup --save 備份到分支1$ hexo b","categories":[{"name":"Blogger","slug":"Blogger","permalink":"https://sain801028.github.io/Blogger/categories/Blogger/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://sain801028.github.io/Blogger/tags/Hexo/"}]}]}